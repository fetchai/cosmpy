[tool.poetry]
name = "cosmpy"
version = "0.9.3"
description = "A library for interacting with the cosmos networks"
authors = ["Fetch.AI Limited"]
readme = "README.md"
license = "Apache-2.0"
homepage = "https://github.com/fetchai/cosmpy"
repository = "https://github.com/fetchai/cosmpy"
documentation = "https://docs.fetch.ai/CosmPy/"
keywords = ["CosmPy", "Cosmos-SDK"]
classifiers=[
    "Environment :: Console",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.9"
ecdsa = "*"
bech32 = "*"
requests = "*"
protobuf = ">=4.21.6,<6.0dev"
grpcio = "*"
jsonschema = ">=3.2.0,<5"
python-dateutil = "*"
pycryptodome = "^3.18.0"
googleapis-common-protos = "*"
virtualenv = ">=20.26.6"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
check-manifest = "*"
tox = "^3.26"
flake8 = "==5.0.4"
black = "^22.10"
mypy = "==0.982"
bandit = "==1.7.4"
safety = "==3.3.1"
isort = "==5.10.1"
darglint = "==1.8.1"
vulture = "==2.6"
pylint = "==2.15.5"
liccheck = "==0.7.2"
flake8-copyright = "==0.2.3"
grpcio-tools = ">=1.66.2"
flake8-bugbear = "==22.10.25"
flake8-eradicate = "==1.4.0"
flake8-docstrings = "==1.6.0"
flake8-isort = "==5.0"
pyyaml = "==5.3.1"
packaging = ">=23.0"
virtualenv = ">=20.26.6"
marshmallow = "<4.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.1.4"
pydoc-markdown = "==4.6.3"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
coverage = "*"
pytest = "*"
pytest-rerunfailures = "*"

[tool.mypy]
python_version = 3.9
strict_optional = true
exclude = "whitelist.py"

[[tool.mypy.overrides]]
module = [
    "cosmpy.protos.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "google.*",
    "requests.*",
    "ecdsa.*",
    "setuptools.*",
    "grpc.*",
    "bech32.*",
    "docker.*",
    "pytest.*",
    "click.*",
    "certifi.*",
    "mbedtls.*",
    "jsonschema.*",
    "dateutil.*"
]
ignore_missing_imports = true

[tool.isort]
# for black compatibility
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
# custom configurations
order_by_type = false
case_sensitive = true
lines_after_imports = 2
skip = [
    "cosmpy/protos",
    ]
skip_glob = "**/*_pb2.py"
known_first_party = "cosmpy"
known_local_folder = "tests"
sections = ["FUTURE",'STDLIB',"THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]

[tool.pylint.main]
ignore= ["protos"]
disable = ["C0103","C0301", "R0801","E1101","E0611"]
# See here for more options: https://www.codeac.io/documentation/pylint-configuration.html
# C0103: REST method names are equivalent to their gRPC counterparts and those are autogenerated with invalid names according to PyLint
# C0301: http://pylint-messages.wikidot.com/messages:c0301 > Line too long (%s/%s), # kept as no harm
# R0801: similar lines, Examples use similair lines for arugments passing.
# E1101: Function %r has no %r member. Tx and ANY's member's are not recognised.
# E0611: No name in module. No name 'Any' in module 'google.protobuf.any_pb2'.

[tool.pylint.imports]
ignored-modules = [".*_pb2.py", "google"]

[tool.pylint.design]
min-public-methods = 1
max-public-methods = 36
max-returns = 10
max-bool-expr = 7
max-args = 27
max-locals = 31
max-statements = 80
max-parents = 11
max-branches = 24
max-attributes = 38

[tool.pylint.refactoring]
max-nested-blocks = 6

[tool.coverage.run]
omit = [
    "*/.local/*",
    "tests/*",
    "*/.tox/*",
    "cosmpy/protos/*",
]

[tool.coverage.html]
directory = "coverage_report"

[tool.check-manifest]
ignore = ["Makefile", "install_packages.py"]

[tool.pytest.ini_options]
markers = [
    "integration: marks tests as integration (deselect with '-m \"not integration\"')",
    "flaky: marks tests as flaky (deselect with '-m \"not flaky\"')",
    "thirdparty: marks tests as third-party",
]
